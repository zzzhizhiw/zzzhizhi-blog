[{"content":"总结了使用 PaperMod 主题搭建 Hugo 博客的过程，包括一些关键功能的配置和调试经验。\n我用的主题是 PaperMod，本文用它来作示例。\n目录 如果要在文章页面中显示目录，请关注以下配置：\n1 2 3 params: showToc: true # 全局显示目录 tocopen: true # 全局目录展开（目录默认是折叠列表） 多语言 这里配置很容易出问题。如果你像我一样喜欢搞多语言博客，请关注以下配置：\n1 2 defaultContentLanguage: zh-cn defaultContentLanguageInSubdir: true defaultContentLanguage: zh-cn\n设置网站默认语言为简体中文 影响 Hugo 生成的 URL 结构 决定默认内容的语言标识 以上配置建议不要修改。\ndefaultContentLanguageInSubdir: true\n控制默认语言内容是否放在子目录中 true: 默认生成路径为 /zh-cn/posts/ false: 默认生成路径为 /posts/ 举例：\n1 2 3 4 5 6 7 8 9 10 11 12 # 当 defaultContentLanguageInSubdir: true public/ ├── zh-cn/ # 默认语言(中文)内容 │ └── posts/ └── en/ # 其他语言内容 └── posts/ # 当 defaultContentLanguageInSubdir: false public/ ├── posts/ # 默认语言(中文)内容 └── en/ # 其他语言内容 └── posts/ 需要配置多语言 content 目录：\n1 2 3 4 5 6 7 8 9 languages: zh-cn: languageName: \u0026#34;简体中文\u0026#34; contentDir: \u0026#34;/content/zh-cn\u0026#34; # /content/\u0026lt;lang\u0026gt; # ... 需要做多语言配置的配置都可以写进这里 en: languageName: \u0026#34;English\u0026#34; contentDir: \u0026#34;/content/en\u0026#34; # ... 在多语言配置下，search.md 和 archive.md 有效路径为：\n1 2 3 4 5 6 7 8 9 content/ ├── zh-cn/ │ ├── posts/ │ ├── search.zh-cn.md # search.\u0026lt;lang\u0026gt;.md │ └── archive.md └── en/ ├── posts/ ├── search.en.md └── archive.md 以上两者的 URL 在 hugo.yaml 中保持一般设置即可：\n1 2 3 4 5 6 7 8 9 10 11 12 languages: zh-cn: menu: main: - identifier: \u0026#34;search\u0026#34; name: \u0026#34;搜索\u0026#34; url: \u0026#34;/search\u0026#34; weight: 1 - identifier: \u0026#34;archives\u0026#34; name: \u0026#34;归档\u0026#34; url: \u0026#34;/archives\u0026#34; weight: 2 搜索 要支持搜索功能，必须在 hugo.yaml 中做如下配置：\n1 2 3 4 5 outputs: home: - HTML - RSS - JSON # JSON 是支持搜索的关键 字体 比如我需要添加 JetBrains Mono 字体，就做如下配置。\n新建 /themes/PaperMod/assets/css/extended/fonts.css：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 /* 导入在线 CDN 字体 */ @import url(\u0026#39;https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400;500;600;700\u0026amp;display=swap\u0026#39;); :root { --mono-font-family: \u0026#34;JetBrains Mono\u0026#34;, Consolas, Monaco, monospace; --cjk-font-family: -apple-system, BlinkMacSystemFont, \u0026#34;PingFang SC\u0026#34;, \u0026#34;Microsoft YaHei\u0026#34;; } body { /* 优先使用等宽字体，即所有英文字符都使用等宽字体 */ /*font-family: var(--mono-font-family), var(--cjk-font-family); */ /* 仅使用基础字体，仅代码块和行内代码使用等宽字体 */ font-family: var(--cjk-font-family); } /* 代码块和行内代码使用等宽字体 */ code, pre { font-family: var(--mono-font-family); } 代码块背景色修改 默认的代码块背景色亮度很低（非常黑），我修改了一下。\n在 /themes/PaperMod/assets/css/common/post-single.css 第 206 行处，可以看到 --code-block-bg 变量决定了代码块背景色：\n1 2 3 4 5 6 7 8 9 10 .post-content pre code { display: grid; margin: auto 0; padding: 10px; color: rgb(213, 213, 214); background: var(--code-block-bg) !important; border-radius: var(--radius); overflow-x: auto; word-break: break-all; } 全局搜索后发现 /themes/PaperMod/assets/css/core/theme-vars.css 中有两处定义了这个变量：\n1 2 3 4 5 6 7 8 9 10 11 :root { ... --code-block-bg: rgb(43, 43, 43); ... } .dark { ... --code-block-bg: rgb(43, 43, 43); ... } 都改成 rgb(43, 43, 43) 就可以了。\n评论 我使用的是 Giscus，它是利用 GitHub Discussions 实现的评论系统。\n请确保：\n博客仓库是公开的，否则访客将无法查看 Discussions。 giscus app 已安装，否则访客将无法评论和回应。 Discussions 功能已在仓库中启用。 然后访问 Giscus 网站，按要求进行配置。\n配置完成后，在“启用 giscus”标题下会出现形如以下内容：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \u0026lt;script src=\u0026#34;https://giscus.app/client.js\u0026#34; data-repo=\u0026#34;[在此输入仓库]\u0026#34; data-repo-id=\u0026#34;[在此输入仓库 ID]\u0026#34; data-category=\u0026#34;[在此输入分类名]\u0026#34; data-category-id=\u0026#34;[在此输入分类 ID]\u0026#34; data-mapping=\u0026#34;pathname\u0026#34; data-strict=\u0026#34;0\u0026#34; data-reactions-enabled=\u0026#34;1\u0026#34; data-emit-metadata=\u0026#34;0\u0026#34; data-input-position=\u0026#34;bottom\u0026#34; data-theme=\u0026#34;preferred_color_scheme\u0026#34; data-lang=\u0026#34;zh-CN\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; async\u0026gt; \u0026lt;/script\u0026gt; 新建 /layouts/partials/comments.html，将得到的 \u0026lt;script\u0026gt; 标签复制粘贴进去。并确保 hugo.yaml 中启用了评论：\n1 2 params: comments: true 推送 敲打 hugo -D 命令后，Hugo 会在 /public 目录下构建静态博客。每次构建前我一般会将 /public 目录删掉来确保构建内容不出问题。\n在这种情况下，我希望只部署静态博客而不是整个 Hugo 框架，于是在根目录写了一个 shell 脚本：\n1 2 3 4 5 6 7 hugo -D cd public git init git remote add origin git@github.com:\u0026lt;user\u0026gt;/\u0026lt;repo\u0026gt;.git git add -A git commit -m \u0026#34;push\u0026#34; git push -f origin main 这个脚本还可以确保仓库中只有一个 commit，保证了编辑历史的隐私性。\n结合 Cloudflare Pages 自带 CI/CD，只需一个脚本即可实现一键推送更新。\n","permalink":"https://www.zzzhizhi.top/zh-cn/posts/hugo-blog-setup-tips/","summary":"\u003cp\u003e总结了使用 PaperMod 主题搭建 Hugo 博客的过程，包括一些关键功能的配置和调试经验。\u003c/p\u003e","title":"Hugo 博客搭建经验总结"}]