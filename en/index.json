[{"content":"Summarized my experience setting up a Hugo blog with the PaperMod theme, including configuration and debugging tips for key features.\nThe theme I used is PaperMod, and this article uses it as an example.\nContent To display a table of contents on the article page, pay attention to the following configuration:\n1 2 3 params: showToc: true # Display the table of contents globally tocopen: true # Expand the table of contents by default Multilingual Configuration This configuration can be tricky. If, like me, you prefer a multilingual blog, make sure to use the following settings:\n1 2 defaultContentLanguage: zh-cn defaultContentLanguageInSubdir: true defaultContentLanguage: zh-cn\nSets the default language of the site to Simplified Chinese Affects the URL structure generated by Hugo Determines the language identifier for default content It is recommended not to modify the above settings.\ndefaultContentLanguageInSubdir: true\nControls whether the default language content is placed in a subdirectory true: The default generated path is /zh-cn/posts/ false: The default generated path is /posts/ Example:\n1 2 3 4 5 6 7 8 9 10 11 12 # When defaultContentLanguageInSubdir: true public/ ├── zh-cn/ # Default language (Chinese) content │ └── posts/ └── en/ # Other language content └── posts/ # When defaultContentLanguageInSubdir: false public/ ├── posts/ # Default language (Chinese) content └── en/ # Other language content └── posts/ You need to configure the multilingual content directory:\n1 2 3 4 5 6 7 8 9 languages: zh-cn: languageName: \u0026#34;Simplified Chinese\u0026#34; contentDir: \u0026#34;/content/zh-cn\u0026#34; # /content/\u0026lt;lang\u0026gt; # ... Other multilingual configurations can go here en: languageName: \u0026#34;English\u0026#34; contentDir: \u0026#34;/content/en\u0026#34; # ... With multilingual configuration, the valid paths for search.md and archive.md are:\n1 2 3 4 5 6 7 8 9 content/ ├── zh-cn/ │ ├── posts/ │ ├── search.zh-cn.md # search.\u0026lt;lang\u0026gt;.md │ └── archive.md └── en/ ├── posts/ ├── search.en.md └── archive.md Keep the URLs in hugo.yaml with standard settings:\n1 2 3 4 5 6 7 8 9 10 11 12 languages: zh-cn: menu: main: - identifier: \u0026#34;search\u0026#34; name: \u0026#34;Search\u0026#34; url: \u0026#34;/search\u0026#34; weight: 1 - identifier: \u0026#34;archives\u0026#34; name: \u0026#34;Archives\u0026#34; url: \u0026#34;/archives\u0026#34; weight: 2 Search To enable search functionality, configure the following in hugo.yaml:\n1 2 3 4 5 outputs: home: - HTML - RSS - JSON # JSON is key for enabling search Fonts For example, to add JetBrains Mono font, configure as follows.\nCreate /themes/PaperMod/assets/css/extended/fonts.css:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 /* Import online CDN font */ @import url(\u0026#39;https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400;500;600;700\u0026amp;display=swap\u0026#39;); :root { --mono-font-family: \u0026#34;JetBrains Mono\u0026#34;, Consolas, Monaco, monospace; --cjk-font-family: -apple-system, BlinkMacSystemFont, \u0026#34;PingFang SC\u0026#34;, \u0026#34;Microsoft YaHei\u0026#34;; } body { /* Prefer using monospace font */ /*font-family: var(--mono-font-family), var(--cjk-font-family); */ /* Only use basic font */ font-family: var(--cjk-font-family); } /* Code blocks and inline code use monospace font */ code, pre { font-family: var(--mono-font-family); } Code Block Background Color The default code block background is very dark. Here\u0026rsquo;s how to modify it.\nFind the --code-block-bg variable in /themes/PaperMod/assets/css/common/post-single.css:\n1 2 3 4 5 6 7 8 9 10 .post-content pre code { display: grid; margin: auto 0; padding: 10px; color: rgb(213, 213, 214); background: var(--code-block-bg) !important; border-radius: var(--radius); overflow-x: auto; word-break: break-all; } In /themes/PaperMod/assets/css/core/theme-vars.css, modify both occurrences:\n1 2 3 4 5 6 7 8 9 10 11 :root { ... --code-block-bg: rgb(43, 43, 43); ... } .dark { ... --code-block-bg: rgb(43, 43, 43); ... } Comments I use Giscus, which integrates with GitHub Discussions.\nRequirements:\nPublic repository Installed giscus app Enabled Discussions feature Visit Giscus website for configuration.\nCreate /layouts/partials/comments.html with the provided script tag and enable comments in hugo.yaml:\n1 2 params: comments: true Deployment After hugo -D, Hugo builds the static blog in /public. I usually clear this directory before building.\nTo deploy only the static blog, use this root directory script:\n1 2 3 4 5 6 7 8 hugo -D cd public git init git remote add origin git@github.com:\u0026lt;user\u0026gt;/\u0026lt;repo\u0026gt;.git git pull origin main git add -A git commit -m \u0026#34;push\u0026#34; git push -f origin main Combined with Vercel CI/CD, one script handles all deployment needs.\n","permalink":"https://www.zzzhizhi.top/en/posts/hugo-blog-setup-tips/","summary":"\u003cp\u003eSummarized my experience setting up a Hugo blog with the PaperMod theme, including configuration and debugging tips for key features.\u003c/p\u003e","title":"Hugo Blog Setup Experience Summary"}]